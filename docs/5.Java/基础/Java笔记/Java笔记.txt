BufferedOutputStream原理？flush清除的是什么?
FileInputStream是怎么判断边界的？
字符流拷贝二进制文件为什么会乱码？
InputStreamReader和OutputStreamWriter在按码表读写时，何时进行的编码，何时进行的解码？
打开记事本的时候，记事本为用户显示内容，这是在编码还是解码？
怎样查看一个文件的二进制表示，和十六进制表示？
Properties的load方法里的输入流，涉及流关闭吗？
PrintStream的write方法和print方法区别？

内存泄漏和内存溢出？
StackOverflowError和OutOfMemoryError?














1、每个对象都是某个类（class）的一个实例（instance）






3、文件拷贝要用字节流，
仅读取文本或仅写入文本时，用字符流
流应该晚开早关

4、将字符串编码成字节数组（然后存储到某处），
将字节数组解码为字符串（然后显示出来）


5、编码表:由现实世界的字符和对应的数值组成的一张表

6、Java的>>是算数右移，在前边补符号位，n>>1相当于n/2
>>>是逻辑右移，在前边补0

7、子类可以继承父类非私有的成员变量和方法。
子类构造时默认会先执行父类的无参构造方法，若父类未提供无参构造方法，则子类必须显示提供某个父类的构造方法。
this()或super()必须在构造器的第一条语句上，且不能同时出现。

加载顺序：父类静态块，子类静态块，父类构造块，父类构造器，子类构造块，子类构造器

AA a = new BB();
BB b = (BB)a;
System.out.println(a);
System.out.println(b);
输出的地址相同。



8、多态只针对非静态，非私有的方法使用，
对静态内容，私有普通方法，以及任何属性都无效

方法：编译看左边，如果父类有此方法，则编译通过；运行看右边，执行真正子类对象的方法；这就叫动态绑定。

9、抽象类
非法组合：abstract static;abstract final;abstract private

10、接口
成员变量：默认public static final
方法：默认public abstract


11、字符串
String s = "123";
s = "234";
这两条语句是合理的，String类的final修饰符仅仅是保证String不能被继承，不能保证s仅能指向同一个引用。

final String s = "123";
s = "234";
这两条语句是非法的，因为s有final修饰，所以不能将其再指向另一个引用。


一个类不可变，指的是其内部的状态可不变，跟这个类有没有被final修饰没关系，final只能限定该类不能被继承。
指向一个不可变类对象的引用，只要该引用变量没被final修饰，就可以将其再指向一个新的不可变类对象



final修饰类：该类不能被继承
final修饰方法：该方法不能被重写
final修饰字段：若为基本类型，则该字段值不可变；若为引用类型，则不能再指向另一个对象；总之不能再对该属性进行赋值操作。
fianl修饰局部变量：在该块级作用域内，同上。







12、Integer有一个整数常量池，在-128到127的int值，不会自动装箱，而是直接从池中取，所以引用值一样。


13、自动装箱与自动拆箱
Integer a = 1;
Integer b = Integer.valueOf(1);
int c = new Integer(1);
int d = new Integer(1).intValue();


14、Queue的不抛异常的三个方法：offer（入队）,poll（出队）,peek（取队头元素）


15、方法重写时，子类不能抛出比父类更多的异常。





